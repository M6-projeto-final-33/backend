// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  cpf           String         @unique
  contact       String
  birthDate     DateTime
  description   String
  userType      String
  password      String
  userImage     String         @default("")
  isAdmin       Boolean        @default(false)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  address       Address?
  announcements Announcement[]
  comments      Comment[]

  @@map("users")
}

model Address {
  id         String @id @default(uuid())
  cep        String
  state      String
  city       String
  street     String
  complement String @default("")
  user       User   @relation(fields: [userId], references: [id])
  userId     String @unique

  @@map("addresses")
}

model Comment {
  id             String       @id @default(uuid())
  description    String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  announcement   Announcement @relation(fields: [announcementId], references: [id])
  announcementId String

  @@map("comments")
}

model Announcement {
  id          String      @id @default(uuid())
  typeAd      String
  title       String
  year        String
  mileage     String
  price       Float
  description String
  vehicleType String
  coverImg    String
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  adsImages   AdsImages[]
  comments    Comment[]

  @@map("announcements")
}

model AdsImages {
  id             String       @id @default(uuid())
  url            String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  announcement   Announcement @relation(fields: [announcementId], references: [id])
  announcementId String

  @@map("adsImages")
}
